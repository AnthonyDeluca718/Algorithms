Total: 18

Code Improvement (3)
-- Discovered / Processed
-- process vertex before/after we process all outgoing vertices
-- edge specific processing

Problems: (8)
-- Shortest path between Vertices
-- Maze Solver
-- Two Coloring
-- Finding cycles (But when we encounter edge (x, y) from x, how can we tell if we have previously traversed the edge from y?)
-- Topological Sort
-- Tarjan Algorithm
-- Kosaraju




Coding: (8)
12 - The square of a directed graph G = (V, E) is the graph G2 = (V, E2) such that (u,w) ∈ E2 iff there exists v ∈ V such that (u,v) ∈ E and (v,w) ∈ E; i.e., there is a path of exactly two edges from u to w.
Give efficient algorithms for both adjacency lists and matrices.

15 - A vertex cover of a graph G = (V,E) is a subset of vertices V′ ∈ V such that every edge in E contains at least one vertex from V ′. An independent set of graph G = (V,E) is a subset of vertices V′ ∈ V such that no edge in E contains both vertices from V ′. An independent vertex cover is a subset of vertices that is both an independent set and a vertex cover of G. Give an efficient algorithm for testing whether G contains an independent vertex cover. What classical graph problem does this reduce to?

18 - Consider a set of movies M1, M2, . . . , Mk. There is a set of customers, each one of which indicates the two movies they would like to see this weekend. Movies are shown on Saturday evening and Sunday evening. Multiple movies may be screened at the same time. You must decide which movies should be televised on Saturday and which on Sun- day, so that every customer gets to see the two movies they desire. Is there a schedule where each movie is shown at most once? Design an efficient algorithm to find such a schedule if one exists.

21 - Let v and w be two vertices in a directed graph G = (V,E). Design a linear- time algorithm to find the number of different shortest paths (not necessarily vertex disjoint) between v and w. Note: the edges in G are unweighted.

26 -  A mother vertex in a directed graph G = (V, E) is a vertex v such that all other vertices G can be reached by a directed path from v.
(a) Give an O(n + m) algorithm to test whether a given vertex v is a mother of G, where n = |V | and m = |E|.
(b) Give an O(n+m) algorithm to test whether graph G contains a mother vertex.

27 - A tournament is a directed graph formed by taking the complete undirected graph and assigning arbitrary directions on the edges—i.e., a graph G = (V,E) such that for all u,v ∈ V, exactly one of (u,v) or (v,u) is in E. Show that every tournament has a Hamiltonian path—that is, a path that visits every vertex exactly once. Give an algorithm to find this path.

28 - An articulation vertex of a graph G is a vertex whose deletion disconnects G. Let G be a graph with n vertices and m edges. Give a simple O(n + m) algorithm for finding a vertex of G that is not an articulation vertex—i.e. , whose deletion does not disconnect G.

29 - Following up on the previous problem, give an O(n + m) algorithm that finds a deletion order for the n vertices such that no deletion disconnects the graph. (Hint: think DFS/BFS.)
