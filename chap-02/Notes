=== RAM Model
-- Simple operations (+ - / *) take one step
-- Memory access takes one time step (ignores cache/disk)
Neither assumption is true

=== Best, Worst, Average Case Running Time:
O(n) = an upper bound
Theta(n) = optimal upper bound (up to a constant factor)
f(n) = o(g(n)) means that g dominates f, f(n)/g(n) -> 0 as n -> inf

=== Master Theorem:
T(n) = a*T(n/b) + f(n)

let C = log_base_b(a)
case 1: f(n) = o(n^C) -> T(n) = O(n^C)
The splitting term does not appear; the recursive tree structure dominates.

case: f(n) = Theta(n^C * log(n)^k) -> Theta(n^C * log(n)^k+1)
Work to split/recombine a problem is comparable to subproblems. f(n) rangebound by the critical-exponent polynomial, times zero or more optional log s.

proof of case 1:
